apiVersion: v1
kind: Service
metadata:
  name: users-service
  labels:
    app: users
spec:
  type: NodePort
  ports:
    - targetPort: 80
      port: 80
  selector:
    app: users
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: users-configuration
  labels:
    app: users
data:
  ACCESS_TOKEN_EXPIRE_MINUTES: "10"
  PROJECT_NAME: "Users Microservice"
---
apiVersion: v1
kind: Secret
metadata:
  name: users-credentials
type: Opaque
data:
  email: YWRtaW5AYWRtaW4uY29t
  password: cGFzc3dvcmQ=
  secret_key: c2VjcmV0
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: users-deployment
  labels:
    app: users
spec:
  replicas: 1
  selector:
    matchLabels:
      app: users
  template:
    metadata:
      labels:
        app: users
    spec:
      initContainers:
        - name: wait-database
          image: busybox:1.28
          command:
            [
              "sh",
              "-c",
              "until nslookup postgres-service.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for mydb; sleep 2; done",
            ]
        - name: perform-migrations
          image: users
          command: ["alembic", "upgrade", "head"]
          env:
            - name: POSTGRES_HOST
              value: "postgres-service"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: password
          envFrom:
            - configMapRef:
                name: postgres-configuration
      containers:
        - name: users
          image: users
          ports:
            - containerPort: 80
          env:
            - name: REDIS_HOST
              value: "redis-service"
            - name: REDIS_PORT
              value: "6379"
            - name: POSTGRES_HOST
              value: "postgres-service"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: password
            - name: FIRST_USER_EMAIL
              valueFrom:
                secretKeyRef:
                  name: users-credentials
                  key: email
            - name: FIRST_USER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: users-credentials
                  key: password
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: users-credentials
                  key: secret_key
          envFrom:
            - configMapRef:
                name: postgres-configuration
            - configMapRef:
                name: users-configuration
